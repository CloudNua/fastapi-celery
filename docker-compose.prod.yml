version: '3.8'

services:

   nginx:
      build: ./compose/production/nginx
      volumes:
         - uploadfiles:/app/upload
      ports:
         - 80:80
         - 5559:5555
         - 15672:15672
      depends_on:
         - web
         - flower

   web:
      build:
         context: .
         dockerfile: ./compose/production/fastapi/Dockerfile
      command: /start
      volumes:

         - uploadfiles:/app/upload
      env_file:
         - ./.env/.prod-sample
      depends_on:
         - redis
         - db
         - rabbitmq

   db:
      image: postgres:13-alpine
      volumes:
         - postgres_data:/var/lib/postgresql/data/
      environment:
         - POSTGRES_DB=fastapi_celery
         - POSTGRES_USER=fastapi_celery
         - POSTGRES_PASSWORD=fastapi_celery

   redis:
      image: redis:6-alpine

   rabbitmq:
      image: rabbitmq:3-management
      env_file:
         - ./.env/.prod-sample

   celery_worker:
      build:
         context: .
         dockerfile: ./compose/production/fastapi/Dockerfile
      image: fastapi_celery_example_celery_worker
      command: /start-celeryworker
      volumes:
         - uploadfiles:/app/upload
      env_file:
         - ./.env/.prod-sample
      depends_on:
         - redis
         - db
         - rabbitmq

   celery_beat:
      build:
         context: .
         dockerfile: ./compose/production/fastapi/Dockerfile
      image: fastapi_celery_example_celery_beat
      command: /start-celerybeat
      volumes:
         - uploadfiles:/app/upload
      env_file:
         - ./.env/.prod-sample
      depends_on:
         - redis
         - db
         - rabbitmq

   flower:
      build:
         context: .
         dockerfile: ./compose/production/fastapi/Dockerfile
      image: fastapi_celery_example_celery_flower
      command: /start-flower
      volumes:
         - uploadfiles:/app/upload
      env_file:
         - ./.env/.prod-sample
      depends_on:
         - redis
         - db
         - rabbitmq

volumes:
   postgres_data:
   uploadfiles: